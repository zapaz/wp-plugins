var app=function(){"use strict";function t(){}function e(t){return t()}function n(){return Object.create(null)}function o(t){t.forEach(e)}function r(t){return"function"==typeof t}function s(t,e){return t!=t?e==e:t!==e}function c(t,e,n){t.insertBefore(e,n||null)}function i(t){t.parentNode.removeChild(t)}function a(t){return document.createElement(t)}function u(t){const e={};for(const n of t)e[n.name]=n.value;return e}let d;function l(t){d=t}function h(t){(function(){if(!d)throw new Error("Function called outside component initialization");return d})().$$.on_mount.push(t)}const f=[],m=[],p=[],$=[],g=Promise.resolve();let b=!1;function w(t){p.push(t)}let _=!1;const k=new Set;function y(){if(!_){_=!0;do{for(let t=0;t<f.length;t+=1){const e=f[t];l(e),x(e.$$)}for(l(null),f.length=0;m.length;)m.pop()();for(let t=0;t<p.length;t+=1){const e=p[t];k.has(e)||(k.add(e),e())}p.length=0}while(f.length);for(;$.length;)$.pop()();b=!1,_=!1,k.clear()}}function x(t){if(null!==t.fragment){t.update(),o(t.before_update);const e=t.dirty;t.dirty=[-1],t.fragment&&t.fragment.p(t.ctx,e),t.after_update.forEach(w)}}const E=new Set;function v(t,e){-1===t.$$.dirty[0]&&(f.push(t),b||(b=!0,g.then(y)),t.$$.dirty.fill(0)),t.$$.dirty[e/31|0]|=1<<e%31}function M(s,c,a,u,h,f,m=[-1]){const p=d;l(s);const $=s.$$={fragment:null,ctx:null,props:f,update:t,not_equal:h,bound:n(),on_mount:[],on_destroy:[],on_disconnect:[],before_update:[],after_update:[],context:new Map(p?p.$$.context:[]),callbacks:n(),dirty:m,skip_bound:!1};let g=!1;if($.ctx=a?a(s,c.props||{},((t,e,...n)=>{const o=n.length?n[0]:e;return $.ctx&&h($.ctx[t],$.ctx[t]=o)&&(!$.skip_bound&&$.bound[t]&&$.bound[t](o),g&&v(s,t)),e})):[],$.update(),g=!0,o($.before_update),$.fragment=!!u&&u($.ctx),c.target){if(c.hydrate){const t=function(t){return Array.from(t.childNodes)}(c.target);$.fragment&&$.fragment.l(t),t.forEach(i)}else $.fragment&&$.fragment.c();c.intro&&((b=s.$$.fragment)&&b.i&&(E.delete(b),b.i(_))),function(t,n,s,c){const{fragment:i,on_mount:a,on_destroy:u,after_update:d}=t.$$;i&&i.m(n,s),c||w((()=>{const n=a.map(e).filter(r);u?u.push(...n):o(n),t.$$.on_mount=[]})),d.forEach(w)}(s,c.target,c.anchor,c.customElement),y()}var b,_;l(p)}let C;"function"==typeof HTMLElement&&(C=class extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"})}connectedCallback(){const{on_mount:t}=this.$$;this.$$.on_disconnect=t.map(e).filter(r);for(const t in this.$$.slotted)this.appendChild(this.$$.slotted[t])}attributeChangedCallback(t,e,n){this[t]=n}disconnectedCallback(){o(this.$$.on_disconnect)}$destroy(){!function(t,e){const n=t.$$;null!==n.fragment&&(o(n.on_destroy),n.fragment&&n.fragment.d(e),n.on_destroy=n.fragment=null,n.ctx=[])}(this,1),this.$destroy=t}$on(t,e){const n=this.$$.callbacks[t]||(this.$$.callbacks[t]=[]);return n.push(e),()=>{const t=n.indexOf(e);-1!==t&&n.splice(t,1)}}$set(t){var e;this.$$set&&(e=t,0!==Object.keys(e).length)&&(this.$$.skip_bound=!0,this.$$set(t),this.$$.skip_bound=!1)}});var I=function({mustBeMetaMask:t=!1,silent:e=!1,timeout:n=3e3}={}){!function(){if("boolean"!=typeof t)throw new Error("@metamask/detect-provider: Expected option 'mustBeMetaMask' to be a boolean.");if("boolean"!=typeof e)throw new Error("@metamask/detect-provider: Expected option 'silent' to be a boolean.");if("number"!=typeof n)throw new Error("@metamask/detect-provider: Expected option 'timeout' to be a number.")}();let o=!1;return new Promise((r=>{function s(){if(o)return;o=!0,window.removeEventListener("ethereum#initialized",s);const{ethereum:n}=window;if(!n||t&&!n.isMetaMask){const o=t&&n?"Non-MetaMask window.ethereum detected.":"Unable to detect window.ethereum.";!e&&console.error("@metamask/detect-provider:",o),r(null)}else r(n)}window.ethereum?s():(window.addEventListener("ethereum#initialized",s,{once:!0}),setTimeout((()=>{s()}),n))}))};function R(e){let n,o,r;return{c(){n=a("button"),n.textContent="Connect Metamask"},m(t,s){var i,a,u,d;c(t,n,s),o||(i=n,a="click",u=e[1],i.addEventListener(a,u,d),r=()=>i.removeEventListener(a,u,d),o=!0)},p:t,d(t){t&&i(n),o=!1,r()}}}function A(t){let e,n;return{c(){var o,r,s,c;e=a("div"),o=t[0],n=document.createTextNode(o),r=e,s="id",null==(c="metamask-address")?r.removeAttribute(s):r.getAttribute(s)!==c&&r.setAttribute(s,c)},m(t,o){c(t,e,o),function(t,e){t.appendChild(e)}(e,n)},p(t,e){1&e&&function(t,e){e=""+e,t.wholeText!==e&&(t.data=e)}(n,t[0])},d(t){t&&i(e)}}}function O(e){let n;function o(t,e){return t[0]?A:R}let r=o(e),s=r(e);return{c(){n=a("main"),s.c(),this.c=t},m(t,e){c(t,n,e),s.m(n,null)},p(t,[e]){r===(r=o(t))&&s?s.p(t,e):(s.d(1),s=r(t),s&&(s.c(),s.m(n,null)))},i:t,o:t,d(t){t&&i(n),s.d()}}}function q(t,e,n){let{signer:o=""}=e,{addresses:r=[]}=e,{chainId:s=""}=e,{autoconnect:c="off"}=e;async function i(t){console.log("handleChainId <=",t),t&&n(2,s=t)}async function a(t){0===t.length?"off"!==c&&u():t[0]!==o&&(n(0,o=t[0]),-1===r.indexOf(o)&&(r.push(o),console.log("handleAccounts",t,"=>",o,r)))}async function u(){console.log("connectMetamask"),ethereum.request({method:"eth_requestAccounts"}).then(a).catch((t=>{4001===t.code?alert("Please connect to MetaMask."):console.error("ERROR eth_requestAccounts",t)}))}return h((async function(){console.log("init");const t=await I();t?(t!==window.ethereum&&alert("Do you have multiple wallets installed?"),ethereum.request({method:"eth_accounts"}).then(a).catch((t=>console.error("ERROR eth_accounts",t))),ethereum.request({method:"eth_chainId"}).then(i).catch((t=>console.error("ERROR eth_chainId",t))),ethereum.on("chainChanged",i),ethereum.on("accountsChanged",a)):console.log("Please install MetaMask!")})),t.$$set=t=>{"signer"in t&&n(0,o=t.signer),"addresses"in t&&n(3,r=t.addresses),"chainId"in t&&n(2,s=t.chainId),"autoconnect"in t&&n(4,c=t.autoconnect)},[o,u,s,r,c]}class L extends C{constructor(t){super(),M(this,{target:this.shadowRoot,props:u(this.attributes),customElement:!0},q,O,s,{signer:0,addresses:3,chainId:2,autoconnect:4}),t&&(t.target&&c(t.target,this,t.anchor),t.props&&(this.$set(t.props),y()))}static get observedAttributes(){return["signer","addresses","chainId","autoconnect"]}get signer(){return this.$$.ctx[0]}set signer(t){this.$set({signer:t}),y()}get addresses(){return this.$$.ctx[3]}set addresses(t){this.$set({addresses:t}),y()}get chainId(){return this.$$.ctx[2]}set chainId(t){this.$set({chainId:t}),y()}get autoconnect(){return this.$$.ctx[4]}set autoconnect(t){this.$set({autoconnect:t}),y()}}return customElements.define("kredeum-metamask",L),L}();
